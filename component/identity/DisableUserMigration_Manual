"Disable_User" database migration script

The "disable user" feature implement in GTNPORTAL-3227. The GateIn's picketlink organization service implementation need legacy database to be migrated (Look at Jira issue for details)
To migrate data, just run this java class: org.exoplatform.services.organization.idm.DisabledUserMigrationScript (located in exo.portal.component.identity-xxx.jar)

Quickstart :
Default configuration works for default GateIn configuration (hsqldb organization database, default picketlink realm)
java -cp lib/*:target/exo.portal.component.identity-xxx.jar -Dhibernate.connection.url=<connection_url> org.exoplatform.services.organization.idm.DisabledUserMigrationScript

This is standalone java application, it can be run with-out portal container. User can run it by Eclipse: choose option "Run as Java Application" or use java command:
java -cp lib/*:target/exo.portal.component.identity-xxx.jar <systemProperties> org.exoplatform.services.organization.idm.DisabledUserMigrationScript <config.properties> 
lib/*  : contains hiberate, picketlink and log4j library: 
	antlr-2.7.6rc1.jar                             		hsqldb-2.0.0.jar                    picketlink-idm-common-1.4.3.Final.jar
	dom4j-1.6.1.jar                                		javassist-3.14.0-GA.jar             picketlink-idm-core-1.4.3.Final.jar
	exo.kernel.commons-2.5.0-Alpha1.jar            	jboss-logging-3.1.2.GA.jar          picketlink-idm-hibernate-1.4.3.Final.jar
	hibernate-commons-annotations-4.0.1.Final.jar  jta-1.1.jar                         picketlink-idm-spi-1.4.3.Final.jar
	hibernate-core-4.1.6.Final.jar                 	log4j-1.2.16.jar                    slf4j-api-1.6.1.jar
	hibernate-jpa-2.0-api-1.0.1.Final.jar          	picketlink-idm-api-1.4.3.Final.jar  slf4j-simple-1.6.1.jar

<systemProperties> : customize the migration behaviour. All properties are optional, there is a default configuration.properties contains default configurations for the script:
picketlink.config_file_path=picketlink-idm-config.xml  --> path to picketlink config file, this file must be in the classpath
picketlink.realmName=idm_realm_portal		   --> picketlink realm name
hibernate.connection.driver_class=org.hsqldb.jdbcDriver 
hibernate.connection.url=jdbc:hsqldb:file:path/to/file 
hibernate.connection.username=sa
hibernate.connection.password=
hibernate.dialect=org.hibernate.dialect.HSQLDialect
hibernate.config_path=hibernate.cfg.xml		   --> DB connection infos are set by above configs, but if user want more hibernate config, just specify path to hibernate config file, this file must be in the classpath
enable_user_from=0						   --> script will start to migrate users from this index (user is arrange by name in ASCENDING order)
batch=100								   --> by default, it migrate for a batch 100 users in a transaction, if there is any problem, the transaction will be rolled-back for that 100 users, look at the console, there is a log to show it's fail from which index, then you can use "enable_user_from" optioni to run again from that index. This should be usefull for large database

If there is no <systemProperties>. Migration script will be configured by a property file, that is specify by <config.properties> argument (this properties file must be in the classpath)
The default configuration files are in the JAR file (configuration.properties, hibernate.cfg.xml, picketlink-idm-config.xml). They will be use in case there is no system properties or argument.
